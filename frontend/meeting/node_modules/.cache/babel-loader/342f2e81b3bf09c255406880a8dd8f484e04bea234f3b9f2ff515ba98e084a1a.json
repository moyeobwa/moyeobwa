{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import LoginScreen from'./components/Login';// 경로 확인\nimport Dashboard from'./components/Dashboard';// 경로 확인\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const handleLogin=credentials=>{// 로그인 로직을 처리합니다. 성공하면 상태를 업데이트합니다.\n// 예를 들어 API를 호출하고 그 결과에 따라 로그인 상태를 결정할 수 있습니다.\nsetIsLoggedIn(true);};return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:isLoggedIn?/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/dashboard\"}):/*#__PURE__*/_jsx(LoginScreen,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isLoggedIn?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/\"})})]})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navigate","LoginScreen","Dashboard","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","handleLogin","credentials","children","path","element","replace","to","onLogin"],"sources":["C:/GitHub/moyeobwa/frontend/meeting/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport LoginScreen from './components/Login'; // 경로 확인\r\nimport Dashboard from './components/Dashboard'; // 경로 확인\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleLogin = (credentials) => {\r\n    // 로그인 로직을 처리합니다. 성공하면 상태를 업데이트합니다.\r\n    // 예를 들어 API를 호출하고 그 결과에 따라 로그인 상태를 결정할 수 있습니다.\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={isLoggedIn ? <Navigate replace to=\"/dashboard\" /> : <LoginScreen onLogin={handleLogin} />}\r\n        />\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={isLoggedIn ? <Dashboard /> : <Navigate replace to=\"/\" />}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAAE;AAC9C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAc,WAAW,CAAIC,WAAW,EAAK,CACnC;AACA;AACAF,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,mBACEL,IAAA,CAACP,aAAa,EAAAe,QAAA,cACZN,KAAA,CAACR,MAAM,EAAAc,QAAA,eACLR,IAAA,CAACL,KAAK,EACJc,IAAI,CAAC,GAAG,CACRC,OAAO,CAAEN,UAAU,cAAGJ,IAAA,CAACJ,QAAQ,EAACe,OAAO,MAACC,EAAE,CAAC,YAAY,CAAE,CAAC,cAAGZ,IAAA,CAACH,WAAW,EAACgB,OAAO,CAAEP,WAAY,CAAE,CAAE,CACpG,CAAC,cACFN,IAAA,CAACL,KAAK,EACJc,IAAI,CAAC,YAAY,CACjBC,OAAO,CAAEN,UAAU,cAAGJ,IAAA,CAACF,SAAS,GAAE,CAAC,cAAGE,IAAA,CAACJ,QAAQ,EAACe,OAAO,MAACC,EAAE,CAAC,GAAG,CAAE,CAAE,CACnE,CAAC,EACI,CAAC,CACI,CAAC,CAEpB,CAEA,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\meeting\\\\src\\\\components\\\\Content.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = ({\n  meetings\n}) => {\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    // 여기서는 컨텐츠의 최소 너비를 300px로 설정했습니다.\n    gap: '20px',\n    // 그리드 아이템 간격을 설정합니다.\n    padding: '20px'\n  };\n  const itemStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    // 아이템 내부 텍스트를 왼쪽으로 정렬합니다.\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    // 모서리를 둥글게 처리합니다.\n    overflow: 'hidden' // 이미지나 내용이 박스 바깥으로 넘치지 않도록 합니다.\n  };\n  const imageStyle = {\n    width: '100%',\n    // 이미지가 컨테이너의 전체 너비를 차지하도록 합니다.\n    aspectRatio: '1 / 1' // 이미지를 정사각형으로 만듭니다.\n  };\n  const titleStyle = {\n    fontWeight: 'bold',\n    // 제목에 볼드 스타일을 적용합니다.\n    padding: '10px'\n  };\n  const descriptionStyle = {\n    padding: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gridStyle,\n    children: meetings.map((meeting, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: itemStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meeting.image,\n        alt: meeting.title,\n        style: imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: titleStyle,\n        children: meeting.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: descriptionStyle,\n        children: meeting.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Content","meetings","gridStyle","display","gridTemplateColumns","gap","padding","itemStyle","flexDirection","alignItems","border","borderRadius","overflow","imageStyle","width","aspectRatio","titleStyle","fontWeight","descriptionStyle","style","children","map","meeting","index","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["C:/React_project/meeting/src/components/Content.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Content = ({ meetings }) => {\r\n  const gridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', // 여기서는 컨텐츠의 최소 너비를 300px로 설정했습니다.\r\n    gap: '20px', // 그리드 아이템 간격을 설정합니다.\r\n    padding: '20px'\r\n  };\r\n\r\n  const itemStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start', // 아이템 내부 텍스트를 왼쪽으로 정렬합니다.\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px', // 모서리를 둥글게 처리합니다.\r\n    overflow: 'hidden' // 이미지나 내용이 박스 바깥으로 넘치지 않도록 합니다.\r\n  };\r\n\r\n  const imageStyle = {\r\n    width: '100%', // 이미지가 컨테이너의 전체 너비를 차지하도록 합니다.\r\n    aspectRatio: '1 / 1' // 이미지를 정사각형으로 만듭니다.\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontWeight: 'bold', // 제목에 볼드 스타일을 적용합니다.\r\n    padding: '10px'\r\n  };\r\n\r\n  const descriptionStyle = {\r\n    padding: '10px'\r\n  };\r\n\r\n  return (\r\n    <div style={gridStyle}>\r\n      {meetings.map((meeting, index) => (\r\n        <div key={index} style={itemStyle}>\r\n          <img src={meeting.image} alt={meeting.title} style={imageStyle} />\r\n          <div style={titleStyle}>{meeting.title}</div>\r\n          <div style={descriptionStyle}>{meeting.description}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChC,MAAMC,SAAS,GAAG;IAChBC,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,uCAAuC;IAAE;IAC9DC,GAAG,EAAE,MAAM;IAAE;IACbC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBJ,OAAO,EAAE,MAAM;IACfK,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,YAAY;IAAE;IAC1BC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IAAE;IACrBC,QAAQ,EAAE,QAAQ,CAAC;EACrB,CAAC;EAED,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE,MAAM;IAAE;IACfC,WAAW,EAAE,OAAO,CAAC;EACvB,CAAC;EAED,MAAMC,UAAU,GAAG;IACjBC,UAAU,EAAE,MAAM;IAAE;IACpBX,OAAO,EAAE;EACX,CAAC;EAED,MAAMY,gBAAgB,GAAG;IACvBZ,OAAO,EAAE;EACX,CAAC;EAED,oBACEP,OAAA;IAAKoB,KAAK,EAAEjB,SAAU;IAAAkB,QAAA,EACnBnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BxB,OAAA;MAAiBoB,KAAK,EAAEZ,SAAU;MAAAa,QAAA,gBAChCrB,OAAA;QAAKyB,GAAG,EAAEF,OAAO,CAACG,KAAM;QAACC,GAAG,EAAEJ,OAAO,CAACK,KAAM;QAACR,KAAK,EAAEN;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEhC,OAAA;QAAKoB,KAAK,EAAEH,UAAW;QAAAI,QAAA,EAAEE,OAAO,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7ChC,OAAA;QAAKoB,KAAK,EAAED,gBAAiB;QAAAE,QAAA,EAAEE,OAAO,CAACU;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAHjDR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACE,EAAA,GA1CIjC,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}